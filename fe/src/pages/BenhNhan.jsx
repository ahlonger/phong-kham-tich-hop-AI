// src/pages/BenhNhan.jsx
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";
import ThanhToan from "./ThanhToan";
import DanhGiaUser from "./DanhGiaUser";
import bannerImg from "../assets/banner.jpg";
import BacSi from "../assets/bacsi1.png";
import useRevealOnScroll from "../hooks/useRevealOnScroll";
import "../styles/reveal.css";

const BenhNhan = () => {
  const [rating, setRating] = useState(0);
  const [isLoggedIn] = useState(false);
  const [reviews, setReviews] = useState([
    { name: "Ph·∫°m Minh Qu√¢n", rating: 4, date: "25/06/2025", comment: "D·ªãch v·ª• r·∫•t t·ªët, b√°c sƒ© t·∫≠n t√¢m. T√¥i r·∫•t h√†i l√≤ng!" },
    { name: "L√™ Thanh H√†", rating: 3, date: "25/06/2025", comment: "D·ªãch v·ª• t·ªët, nh∆∞ng c·∫ßn c·∫£i thi·ªán th·ªùi gian ch·ªù." },
    { name: "Ph·∫°m H·ªØu Th√¢n Th∆∞∆°ng", rating: 5, date: "25/06/2025", comment: "Tuy·ªát v·ªùi, s·∫Ω quay l·∫°i l·∫ßn n·ªØa!" },
  ]);
  const [isPaymentOpen, setIsPaymentOpen] = useState(false);
  const [selectedService, setSelectedService] = useState(null);
  const [selectedDoctor, setSelectedDoctor] = useState(null);

  const navigate = useNavigate();

  const handleBuy = (service) => {
    setSelectedService(service);
    setIsPaymentOpen(true);
  };

  const bannerRef = useRevealOnScroll({ threshold: 0.1 });
  const aboutRef = useRevealOnScroll({ threshold: 0.1 });
  const equipmentRef = useRevealOnScroll({ threshold: 0.1 }); // Th√™m ref cho section m·ªõi
  const doctorsRef = useRevealOnScroll({ threshold: 0.1 });
  const videoRef = useRevealOnScroll({ threshold: 0.1 });
  const servicesRef = useRevealOnScroll({ threshold: 0.1 });
  const reviewsRef = useRevealOnScroll({ threshold: 0.1 });
  const whyUsRef = useRevealOnScroll({ threshold: 0.1 });

  const handleBookAppointment = () => {
    navigate("/dat-lich");
  };

  const handleViewDoctorDetail = (doctor) => {
    setSelectedDoctor(doctor);
  };

  const closeDetail = () => {
    setSelectedDoctor(null);
  };

  const doctors = [
    { 
      id: 1, 
      name: "BS. Ph·∫°m H·ªØu Th√¢n Th∆∞∆°ng", 
      spec: "Ph·ª• Khoa", 
      desc: "15 nƒÉm kinh nghi·ªám",
      position: "Ch·ªß nhi·ªám khoa Ph·ª• Khoa",
      experience: 15,
      introduction: "B√°c sƒ© Ph·∫°m H·ªØu Th√¢n Th∆∞∆°ng c√≥ h∆°n 15 nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c ph·ª• khoa, chuy√™n ƒëi·ªÅu tr·ªã c√°c b·ªánh l√Ω ph·ª©c t·∫°p.",
      achievements: "Gi·∫£i th∆∞·ªüng B√°c sƒ© xu·∫•t s·∫Øc nƒÉm 2023.",
      image: BacSi
    },
    { 
      id: 2, 
      name: "BS. Tr·∫ßn Th·ªã B", 
      spec: "Nha khoa", 
      desc: "10 nƒÉm kinh nghi·ªám",
      position: "Ph√≥ khoa Nha khoa",
      experience: 10,
      introduction: "B√°c sƒ© Tr·∫ßn Th·ªã B chuy√™n s√¢u v·ªÅ c√°c v·∫•n ƒë·ªÅ nha khoa c∆° b·∫£n v√† th·∫©m m·ªπ.",
      achievements: "Ch·ª©ng nh·∫≠n chuy√™n gia nha khoa qu·ªëc t·∫ø 2022.",
      image: BacSi
    },
    { 
      id: 3, 
      name: "BS. L√™ VƒÉn C", 
      spec: "C·∫•y gh√©p Implant", 
      desc: "12 nƒÉm kinh nghi·ªám",
      position: "Tr∆∞·ªüng khoa C·∫•y gh√©p",
      experience: 12,
      introduction: "B√°c sƒ© L√™ VƒÉn C n·ªïi ti·∫øng v·ªõi k·ªπ thu·∫≠t c·∫•y gh√©p Implant ti√™n ti·∫øn.",
      achievements: "Gi·∫£i th∆∞·ªüng Implant xu·∫•t s·∫Øc 2021.",
      image: BacSi
    },
    { 
      id: 4, 
      name: "BS. Ph·∫°m Th·ªã D", 
      spec: "Nha khoa th·∫©m m·ªπ", 
      desc: "14 nƒÉm kinh nghi·ªám",
      position: "Chuy√™n vi√™n Th·∫©m m·ªπ nha khoa",
      experience: 14,
      introduction: "B√°c sƒ© Ph·∫°m Th·ªã D chuy√™n v·ªÅ l√†m tr·∫Øng rƒÉng v√† ch·ªânh nha th·∫©m m·ªπ.",
      achievements: "Gi·∫£i th∆∞·ªüng th·∫©m m·ªπ nha khoa 2022.",
      image: BacSi
    },
  ];

  return (
    <div className="bg-[#f7f9fc]">
      <Navbar />
      <div className="pt-16">
        {/* Banner */}
        <div id="home" className="w-full relative reveal" ref={bannerRef}>
          <img src={bannerImg} alt="Banner" className="w-full h-[300px] md:h-[400px] lg:h-[500px] object-cover" />
          <div className="absolute top-0 left-0 w-full h-full bg-black bg-opacity-50 flex items-center justify-center px-4">
            <div className="text-center text-white">
              <h1 className="text-2xl md:text-4xl font-bold mb-4">Ph√≤ng kh√°m ƒêa Khoa Smart Health</h1>
              <p className="text-base md:text-lg mb-4">N∆°i mang ƒë·∫øn n·ª• c∆∞·ªùi ho√†n h·∫£o v·ªõi ƒë·ªôi ng≈© b√°c sƒ© chuy√™n nghi·ªáp v√† c√¥ng ngh·ªá hi·ªán ƒë·∫°i.</p>
              <h2 className="text-sm md:text-base">Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn m·ªôt s·ª± tr·∫£i nghi·ªám h√†i l√≤ng nh·∫•t c·ªßa kh√°ch h√†ng</h2>
              <button onClick={handleBookAppointment} className="bg-[#0077cc] text-white px-6 py-3 rounded-lg hover:bg-[#005fa3] mt-5 transition">ƒê·∫∑t l·ªãch ngay</button>
            </div>
          </div>
        </div>

        {/* Gi·ªõi thi·ªáu ph√≤ng kh√°m */}
        <section className="w-full max-w-[1200px] mx-auto mt-10 p-6 md:p-10 bg-white rounded-xl shadow text-center reveal" ref={aboutRef}>
          <h2 className="text-xl md:text-2xl font-bold text-[#0077cc] mb-6 animate-fade-in">V·ªÅ Ph√≤ng Kh√°m ƒêa Khoa Smart Health</h2>
          <p className="text-gray-700 text-base md:text-lg leading-relaxed max-w-4xl mx-auto mb-6">
            V·ªõi h∆°n <span className="font-semibold text-[#0077cc]">nhi·ªÅu nƒÉm kinh nghi·ªám</span> trong c√°c ng√†nh ƒëa khoa, ph√≤ng kh√°m c·ªßa ch√∫ng t√¥i t·ª± h√†o mang ƒë·∫øn d·ªãch v·ª• chuy√™n nghi·ªáp, ƒë·ªôi ng≈© b√°c sƒ© t·∫≠n t√¢m v√† c∆° s·ªü v·∫≠t ch·∫•t hi·ªán ƒë·∫°i.
            Ch√∫ng t√¥i cam k·∫øt ƒëem l·∫°i tr·∫£i nghi·ªám tho·∫£i m√°i, an to√†n v√† hi·ªáu qu·∫£ cho m·ªói kh√°ch h√†ng.
          </p>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-6 text-left">
            {[
              { icon: "ü¶∑", title: "Trang thi·∫øt b·ªã hi·ªán ƒë·∫°i", desc: "√Åp d·ª•ng c√¥ng ngh·ªá ti√™n ti·∫øn trong ƒëi·ªÅu tr·ªã v√† th·∫©m m·ªπ rƒÉng mi·ªáng." },
              { icon: "üë®‚Äç‚öïÔ∏è", title: "ƒê·ªôi ng≈© b√°c sƒ© gi√†u kinh nghi·ªám", desc: "T∆∞ v·∫•n t·∫≠n t√¢m, ƒëi·ªÅu tr·ªã ch√≠nh x√°c ‚Äì lu√¥n l·∫Øng nghe ng∆∞·ªùi b·ªánh." },
              { icon: "üåü", title: "Kh√°ch h√†ng h√†i l√≤ng", desc: "H∆°n 10.000 kh√°ch h√†ng tin t∆∞·ªüng v√† l·ª±a ch·ªçn." },
            ].map((item, idx) => (
              <div key={idx} className="flex items-start gap-4 bg-[#f1faff] p-4 rounded-lg shadow-sm hover:shadow-md transition">
                <div className="text-3xl">{item.icon}</div>
                <div>
                  <h4 className="font-bold text-[#0077cc]">{item.title}</h4>
                  <p className="text-gray-600 text-sm">{item.desc}</p>
                </div>
              </div>
            ))}
          </div>
        </section>

        {/* Danh s√°ch b√°c sƒ© */}
        <section id="danh-sach-bac-si" className="w-full max-w-[1200px] mx-auto p-5 md:p-10 rounded-xl text-center bg-gray-100 reveal" ref={doctorsRef}>
          <h2 className="text-xl md:text-2xl font-bold text-[#0077cc] mb-8">Danh s√°ch b√°c sƒ©</h2>
          <div className="flex flex-wrap justify-center md:justify-between gap-6">
            {doctors.map((bs, i) => (
              <div key={i} className="bg-white p-5 rounded-xl w-full sm:w-[45%] md:w-[23%] shadow hover:-translate-y-1 transition">
                <img src={bs.image} className="w-24 h-24 object-cover rounded-full mx-auto mb-4" alt={bs.name} />
                <h3 className="font-semibold text-gray-800">{bs.name}</h3>
                <p className="text-sm text-gray-600 mb-2">{bs.spec}</p>
                <button
                  onClick={() => handleViewDoctorDetail(bs)}
                  className="bg-[#0077cc] text-white px-4 py-2 rounded hover:bg-[#005fa3]"
                >
                  Xem chi ti·∫øt
                </button>
              </div>
            ))}
          </div>
        </section>

        {/* Modal chi ti·∫øt b√°c sƒ© */}
        {selectedDoctor && (
          <div
            className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
            onClick={closeDetail}
          >
            <div
              className="bg-white p-6 rounded-lg shadow-lg max-w-xl w-full mx-4 md:max-w-2xl lg:max-w-4xl relative"
              onClick={(e) => e.stopPropagation()}
            >
              <button
                onClick={closeDetail}
                className="absolute top-2 right-2 text-gray-600 hover:text-gray-800 text-2xl"
              >
                &times;
              </button>
              <div className="flex flex-col md:flex-row items-center gap-6">
                <img
                  src={selectedDoctor.image}
                  alt={selectedDoctor.name}
                  className="w-32 h-32 object-cover rounded-full"
                />
                <div>
                  <h2 className="text-2xl font-semibold text-gray-800">{selectedDoctor.name}</h2>
                  <p className="text-gray-600"><strong>Ch·ª©c v·ª•:</strong> {selectedDoctor.position}</p>
                  <p className="text-gray-600"><strong>Chuy√™n ng√†nh:</strong> {selectedDoctor.spec}</p>
                  <p className="text-gray-600"><strong>Kinh nghi·ªám:</strong> {selectedDoctor.experience} nƒÉm</p>
                </div>
              </div>
              <div className="mt-6">
                <h3 className="text-xl font-semibold text-[#0077cc] mb-2">Gi·ªõi thi·ªáu</h3>
                <p className="text-gray-700">{selectedDoctor.introduction}</p>
              </div>
              <div className="mt-6">
                <h3 className="text-xl font-semibold text-[#0077cc] mb-2">Th√†nh t·ª±u</h3>
                <p className="text-gray-700">{selectedDoctor.achievements}</p>
              </div>
            </div>
          </div>
        )}

        {/* Video */}
        <section className="w-full max-w-[1200px] mx-auto my-12 px-4 md:px-10 py-10 text-center bg-white rounded-xl shadow-md reveal" ref={videoRef}>
          <h2 className="text-2xl md:text-3xl font-bold text-[#0077cc] mb-6">Video Gi·ªõi Thi·ªáu Ph√≤ng Kh√°m</h2>
          <div className="relative pb-[56.25%] h-0 overflow-hidden rounded-lg shadow-lg">
            <iframe
              className="absolute top-0 left-0 w-full h-full"
              src="https://youtu.be/n8xX8M0U3aY?si=JCp8pC-SleqE45X6"
              title="Gi·ªõi thi·ªáu ph√≤ng kh√°m"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowFullScreen
            ></iframe>
          </div>
        </section>

        {/* Trang thi·∫øt b·ªã hi·ªán ƒë·∫°i */}
        <section id="trang-thiet-bi" className="w-full max-w-[1200px] mx-auto my-10 p-6 md:p-10 bg-white rounded-xl shadow text-center reveal" ref={equipmentRef}>
          <h2 className="text-2xl md:text-3xl font-bold text-[#0077cc] mb-8 animate-fade-in">Trang thi·∫øt b·ªã hi·ªán ƒë·∫°i</h2>
          <p className="text-gray-700 text-lg md:text-xl leading-relaxed max-w-4xl mx-auto mb-6">
            Ph√≤ng kh√°m ƒêa Khoa Smart Health t·ª± h√†o ƒë·∫ßu t∆∞ v√†o c√°c thi·∫øt b·ªã ti√™n ti·∫øn, ƒë·∫£m b·∫£o ch·∫©n ƒëo√°n ch√≠nh x√°c v√† ƒëi·ªÅu tr·ªã hi·ªáu qu·∫£ cho kh√°ch h√†ng.
          </p>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-6 text-center">
            {[
              { 
                title: "M√°y ch·ª•p X-quang k·ªπ thu·∫≠t s·ªë", 
                desc: "Cung c·∫•p h√¨nh ·∫£nh r√µ n√©t v·ªõi li·ªÅu ph√≥ng x·∫° th·∫•p, an to√†n cho b·ªánh nh√¢n.", 
                image: "/src/assets/maychupxquang.jpg" 
              },
              { 
                title: "H·ªá th·ªëng Laser Whitening", 
                desc: "C√¥ng ngh·ªá l√†m tr·∫Øng rƒÉng ti√™n ti·∫øn, kh√¥ng g√¢y √™ bu·ªët.", 
                image: "/src/assets/maylaserwhitening.jpg" 
              },
              { 
                title: "M√°y si√™u √¢m Doppler", 
                desc: "H·ªó tr·ª£ ch·∫©n ƒëo√°n ch√≠nh x√°c c√°c v·∫•n ƒë·ªÅ n·ªôi khoa v√† ngo·∫°i khoa.", 
                image: "/src/assets/maysieuam.jpg" 
              },
              { 
                title: "K√≠nh hi·ªÉn vi ph·∫´u thu·∫≠t Luxor Revalia", 
                desc: "C√¥ng ngh·ªá hi·ªÉn th·ªã 3D ti√™n ti·∫øn h·ªó tr·ª£ ph·∫´u thu·∫≠t ch√≠nh x√°c cao.", 
                image: "/src/assets/kinhhienvi.jpg" 
              },
              { 
                title: "M√°y CT Cone Beam 3D", 
                desc: "Ch·ª•p h√¨nh 3D chi ti·∫øt cho nha khoa v√† ch·∫©n ƒëo√°n rƒÉng mi·ªáng.", 
                image: "/src/assets/maychupct.jpg" 
              },
              { 
                title: "H·ªá th·ªëng CAD/CAM CEREC", 
                desc: "Thi·∫øt k·∫ø v√† ch·∫ø t·∫°o m√£o rƒÉng, c·∫ßu rƒÉng ngay trong m·ªôt bu·ªïi kh√°m.", 
                image: "/src/assets/maycad.jpg" 
              },
            ].map((equipment, idx) => (
              <div key={idx} className="bg-[#f1faff] p-6 rounded-lg shadow-sm hover:shadow-md transition">
                <div className="w-48 h-48 mx-auto mb-6 bg-gray-300" style={{ backgroundImage: `url(${equipment.image})`, backgroundSize: "cover", backgroundPosition: "center" }} />
                <h4 className="text-xl font-bold text-[#0077cc] mb-4">{equipment.title}</h4>
                <p className="text-gray-600 text-base md:text-lg">{equipment.desc}</p>
              </div>
            ))}
          </div>
        </section>

        {/* G√≥i d·ªãch v·ª• */}
        <section id="goi-dich-vu" className="w-full max-w-[1200px] mx-auto my-10 p-5 md:p-10 bg-gray-50 text-center rounded-xl shadow reveal" ref={servicesRef}>
          <h2 className="text-xl md:text-2xl font-bold text-[#0077cc] mb-8">G√≥i d·ªãch v·ª• n·ªïi b·∫≠t</h2>
          <div className="flex flex-col md:flex-row md:justify-between gap-6">
            {[
              { title: "G√≥i Kh√°m T·ªïng Qu√°t", desc: "Kh√°m rƒÉng t·ªïng th·ªÉ, ch·ª•p X-quang, t∆∞ v·∫•n chuy√™n s√¢u v·ªõi b√°c sƒ©.", price: "500.000ƒë", image: bannerImg, validity: "Th·ªùi h·∫°n 6 th√°ng" },
              { title: "G√≥i L√†m Tr·∫Øng RƒÉng", desc: "L√†m tr·∫Øng rƒÉng c√¥ng ngh·ªá Laser Whitening kh√¥ng √™ bu·ªët.", price: "1.200.000ƒë", image: bannerImg, validity: "Th·ªùi h·∫°n 6 th√°ng" },
              { title: "G√≥i Ni·ªÅng RƒÉng Tr·∫£ G√≥p", desc: "Ni·ªÅng rƒÉng m·∫Øc c√†i kim lo·∫°i, h·ªó tr·ª£ tr·∫£ g√≥p 0% l√£i su·∫•t.", price: "19.000.000ƒë", image: bannerImg, validity: "Th·ªùi h·∫°n 6 th√°ng" },
            ].map((service, idx) => (
              <div key={idx} className="w-full md:w-[32%] bg-white p-5 rounded-xl shadow hover:-translate-y-1 transition relative">
                <div className="w-full h-40 bg-gray-300 mb-4" style={{ backgroundImage: `url(${service.image})`, backgroundSize: "cover", backgroundPosition: "center" }} />
                <h3 className="font-bold text-gray-800 mb-2">{service.title}</h3>
                <p className="text-sm text-gray-600 mb-3">{service.desc}</p>
                <span className="block font-bold text-[#e74c3c] mb-3">{service.price}</span>
                <p className="text-sm text-gray-500 mb-3">{service.validity}</p>
                <button onClick={() => handleBuy(service)} className="bg-[#0077cc] text-white px-4 py-2 rounded hover:bg-[#005fa3]">Mua</button>
              </div>
            ))}
          </div>
        </section>

        {/* ƒê√°nh gi√° */}
        <section id="danh-gia" className="w-full max-w-[1200px] mx-auto my-10 p-5 md:p-10 bg-gray-50 text-center rounded-xl shadow reveal" ref={reviewsRef}>
          <DanhGiaUser />
        </section>

        {/* ∆Øu ƒëi·ªÉm n·ªïi b·∫≠t */}
        <section className="w-full max-w-[1200px] mx-auto my-12 px-4 md:px-10 py-10 bg-gradient-to-r from-[#e3f2fd] via-[#ffffff] to-[#e1f5fe] rounded-xl shadow-lg reveal" ref={whyUsRef}>
          <h2 className="text-center text-2xl md:text-3xl font-bold text-[#0077cc] mb-10 animate-fade-in">
            T·∫°i sao kh√°ch h√†ng lu√¥n ch·ªçn Ph√≤ng Kh√°m ƒêa Khoa Smart Health?
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
            {[
              {
                img: "https://cdn-icons-png.flaticon.com/512/3209/3209265.png",
                title: "T∆∞ v·∫•n t·∫≠n t√¢m",
                desc: "ƒê·ªôi ng≈© nh√¢n vi√™n lu√¥n s·∫µn s√†ng l·∫Øng nghe v√† h·ªó tr·ª£ chu ƒë√°o m·ªçi v·∫•n ƒë·ªÅ c·ªßa b·∫°n.",
              },
              {
                img: "https://cdn-icons-png.flaticon.com/512/2769/2769339.png",
                title: "Gi√° c·∫£ h·ª£p l√Ω",
                desc: "D·ªãch v·ª• ch·∫•t l∆∞·ª£ng cao nh∆∞ng chi ph√≠ lu√¥n minh b·∫°ch v√† c·∫°nh tranh nh·∫•t th·ªã tr∆∞·ªùng.",
              },
              {
                img: "https://cdn-icons-png.flaticon.com/512/2965/2965567.png",
                title: "Kh√¥ng gian hi·ªán ƒë·∫°i",
                desc: "Ph√≤ng kh√°m khang trang, s·∫°ch s·∫Ω, t·∫°o c·∫£m gi√°c tho·∫£i m√°i nh∆∞ ·ªü nh√†.",
              },
            ].map((item, i) => (
              <div
                key={i}
                className="bg-white rounded-xl p-6 shadow-md hover:shadow-xl transform hover:-translate-y-2 transition duration-300"
              >
                <img src={item.img} alt={item.title} className="w-20 h-20 mx-auto mb-4" />
                <h3 className="text-xl font-semibold text-[#0077cc] mb-2">{item.title}</h3>
                <p className="text-gray-600 text-sm">{item.desc}</p>
              </div>
            ))}
          </div>
        </section>

        <Footer />
      </div>

      <ThanhToan isOpen={isPaymentOpen} onClose={() => setIsPaymentOpen(false)} service={selectedService} />
    </div>
  );
};

export default BenhNhan;